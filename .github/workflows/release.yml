name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Get dependencies
      run: go mod download

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        mkdir -p dist
        binary_name="galaplate"
        if [ "${{ matrix.goos }}" = "windows" ]; then
          binary_name="galaplate.exe"
        fi
        go build -o dist/${binary_name} ./cmd/galaplate
        
        # Create the final binary name that matches the install script format
        final_name="galaplate_${{ matrix.goos }}_${{ matrix.goarch }}"
        if [ "${{ matrix.goos }}" = "windows" ]; then
          mv dist/${binary_name} dist/${final_name}.exe
        else
          mv dist/${binary_name} dist/${final_name}
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: galaplate-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist

    - name: Flatten artifacts
      run: |
        find dist -name "galaplate*" -type f -exec mv {} dist/ \;
        find dist -type d -empty -delete

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: "dist/*"
        generate_release_notes: true
        draft: false
        prerelease: false